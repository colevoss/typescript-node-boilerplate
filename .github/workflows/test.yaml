name: Test Workflow

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  labeler:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/labeler@v3
        with:
          repo-token: '${{ secrets.GITHUB_TOKEN }}'
          configuration-path: .github/labeler.yaml

  build:
    name: Build Project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16'

      - name: Install
        run: npm ci

      - name: Build
        run: npm run build --if-present

  linting:
    name: Super Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      ################################
      # Run Linter against code base #
      ################################
      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_GITHUB_ACTIONS: false
          TYPESCRIPT_DEFAULT_STYLE: prettier
          TYPESCRIPT_ES_CONFIG_FILE: .eslintrc.js

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: [build, linting]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16'

      - name: Install
        run: npm ci

      # - name: Build
      #   run: npm run build --if-present

      - name: Test
        run: npm test

      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: coverage

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [build, linting]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16'

      - name: Install
        run: npm ci

      # - name: Build
      #   run: npm run build --if-present

      - name: Test
        run: npm test

  build-image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    # needs: [integration-test, unit-test, linting]
    needs: [integration-test, unit-test]

    steps:
      - uses: actions/checkout@v2
      - name: Build Image
        run: |
          docker build -t typescript-node-boilerplate:${{ github.sha }} .