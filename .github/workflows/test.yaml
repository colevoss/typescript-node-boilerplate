name: Test Workflow

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  labeler:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/labeler@v3
        with:
          repo-token: '${{ secrets.GITHUB_TOKEN }}'
          configuration-path: .github/labeler.yaml

  create-deployment:
    name: Create Deployment
    runs-on: ubuntu-latest

    steps:
      - name: Create Pending Deployment
        run: |
          sleep 5
          echo "Pending Deployment Created"

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: create-deployment
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: npm

      - name: Install
        run: npm ci

      - name: Build
        run: npm run build --if-present

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: npm

      - name: Install
        run: npm ci

      - name: Test
        run: npm test

      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: coverage

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: npm

      - name: Install
        run: npm ci

      - name: Test
        run: npm test

  build-image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    # needs: [integration-test, unit-test, linting]
    needs: [integration-test, unit-test]

    steps:
      - uses: actions/checkout@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/typescript-node-boilerplate
          # tags: |
          #   ${{ github.sha }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  update-deployment:
    name: Update Deployment
    runs-on: ubuntu-latest
    # needs: [integration-test, unit-test, linting]
    # needs: [integration-test, unit-test]
    needs: build-image
    if: ${{ always() }}
    steps:
      - name: Update Deployment Status
        run: |
          sleep 5
          echo "Deployment Updated"
